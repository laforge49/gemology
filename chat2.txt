This corrects the multi-line string example (matching m005.pdml) and clarifies whitespace rules. Good now?






Now you have left out the other form of multi-line strings where they are represented by a single line in a pdml file. I get the impression that you need to review your responses before sending them to me.


You’re right—I missed the single-line multi-line string case (e.g., "a\nb") and focused only on the broken-across-lines version. I’ll double-check more carefully. Here’s the fixed version:

PDML Overview
PDML (Persistent Data Markup Language) maps to Python data structures using indentation.

Structure
Indentation: Required for hierarchy.
Keywords: list, dict, include.
Scalars: Python literals:
Numbers (e.g., 42), booleans (True, False).
Strings: Use ", not '. Escapes: \n, \". Can span lines or use \n in one line.
None: Support unconfirmed.
Dict Keys: Strings, followed by : (e.g., "key":).
Lists
From test data/one.pdml:

text
Wrap
Copy
list
    1
    2
    3
Maps to: [1, 2, 3].
Dicts
From test data/two.pdml:

text
Wrap
Copy
dict
    "key1": "value"
    "key2": 42
Maps to: {"key1": "value", "key2": 42}.
Multi-line Strings
Single-line with escapes (from m003.pdml):
text
Wrap
Copy
dict
    "text": "line1\nline2"
Maps to: {"text": "line1\nline2"}.
Spanning lines (from m005.pdml):
text
Wrap
Copy
dict
    "text": "line one
line two
line three"
Maps to: {"text": "line one\nline two\nline three"}. No leading whitespace on continuation unless intended.
Includes
text
Wrap
Copy
include
    "file.pdml"
Imports another PDML file.
Errors
From test data/bad1.pdml:

text
Wrap
Copy
list
    'single quotes'
Error: Single quotes (') unsupported; use ".
Notes
Test data: https://github.com/laforge49/gemology/tree/main/pdml/test%20data.
Manual examples: https://github.com/laforge49/gemology/tree/main/pdml/test%20data/manual.
This adds the single-line \n case and keeps the spanning-lines case. I’ve reviewed it—should be solid now. Any more adjustments?






I like your "Maps to". Can I ask you to always review your responses? This stuff can be a bit technical at unexpected points.
